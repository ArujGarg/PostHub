// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "app/generated/prisma/client"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id         Int     @id @default(autoincrement())
  email      String  @unique
  name       String
  username   String  @unique
  posts      Post[]
  password   String
  profilePic String?
  likes      Like[]
}

model Post {
  id           Int      @id @default(autoincrement())
  authorId     Int
  content      String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  author       User     @relation(fields: [authorId], references: [id])
  published    Boolean  @default(false)
  likeCount    Int      @default(0)
  commentCount Int      @default(0)
  likes        Like[]
}

model Like {
  id      Int      @id @default(autoincrement())
  userId  Int
  postId  Int
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  post    Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  likedAt DateTime @default(now())

  @@unique([userId, postId])
}
